name: Deploy Elite Trading Coach AI

on:
  push:
    branches: [ main, staging, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      JWT_SECRET: test-jwt-secret-32-chars-minimum-for-testing-only
      OPENAI_API_KEY: sk-test-key
      OPENAI_MOCK_ENABLED: true
      CLOUDINARY_CLOUD_NAME: test-cloud
      CLOUDINARY_API_KEY: test-key
      CLOUDINARY_API_SECRET: test-secret
      
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: app/package-lock.json
        
    - name: Install dependencies
      run: |
        cd app
        npm ci
        
    - name: Run database migrations
      run: |
        cd app
        npm run db:migrate
        
    - name: Run tests
      run: |
        cd app
        npm run test
        
    - name: Run linting
      run: |
        cd app
        npm run lint
        
    - name: Run type checking
      run: |
        cd app
        npm run typecheck
        
    - name: Build application
      run: |
        cd app
        npm run build

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: './app'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    
    environment:
      name: staging
      url: https://staging-elite-trading-coach.railway.app
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Railway CLI
      run: npm install -g @railway/cli
      
    - name: Deploy to Railway Staging
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_STAGING_TOKEN }}
      run: |
        cd app
        railway up --service staging-elite-trading-coach
        
    - name: Run staging health checks
      env:
        STAGING_URL: https://staging-elite-trading-coach.railway.app
      run: |
        sleep 30  # Wait for deployment
        curl -f $STAGING_URL/api/health || exit 1
        curl -f $STAGING_URL/api/health/openai || exit 1

  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: production
      url: https://elite-trading-coach.railway.app
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Railway CLI
      run: npm install -g @railway/cli
      
    - name: Deploy to Railway Production
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}
      run: |
        cd app
        railway up --service elite-trading-coach
        
    - name: Run production health checks
      env:
        PRODUCTION_URL: https://elite-trading-coach.railway.app
      run: |
        sleep 60  # Wait for deployment
        curl -f $PRODUCTION_URL/api/health || exit 1
        curl -f $PRODUCTION_URL/api/health/openai || exit 1
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "‚úÖ Production deployment successful"
        echo "üîó URL: https://elite-trading-coach.railway.app"
        
    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå Production deployment failed"
        exit 1