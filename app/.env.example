# Elite Trading Coach AI - Environment Configuration
# Copy this file to .env and update the values

# Server Configuration
NODE_ENV=development
PORT=3001
FRONTEND_URL=http://localhost:3000

# JWT Configuration
JWT_SECRET=your-super-secure-jwt-secret-key-change-in-production
JWT_ACCESS_EXPIRY=15m
JWT_REFRESH_EXPIRY=7d

# Database Configuration (from existing Railway setup)
# These should match your existing database configuration
PGUSER=postgres
PGPASSWORD=your-database-password
PGHOST=your-database-host
PGPORT=5432
PGDATABASE=your-database-name
DATABASE_URL=postgresql://user:pass@host:port/database

# API Security
API_KEY=your-api-key-for-external-integrations

# OpenAI Configuration
# =======================
# Get your API key from: https://platform.openai.com/api-keys
# SECURITY: Never commit actual API keys to version control
OPENAI_API_KEY=sk-your-openai-api-key-here

# Mock Mode Configuration
# Set to 'true' to use mock responses instead of real OpenAI API calls
# Useful for development and testing without API costs
USE_MOCK_OPENAI=false

# GPT-5 Model Configuration
# Primary model for trade analysis (GPT-5 with reasoning capabilities)
OPENAI_MODEL=gpt-5
# Fallback model if GPT-5 is unavailable (recommended: gpt-4o)
OPENAI_FALLBACK_MODEL=gpt-4o
# Maximum tokens per request (affects cost and response length)
OPENAI_MAX_TOKENS=1000
# Temperature for response randomness (0.0-2.0, 0.3 recommended for analysis)
OPENAI_TEMPERATURE=0.3

# GPT-5 Reasoning Configuration
# =======================
# Default reasoning effort level for GPT-5 (low/medium/high)
# - low: Faster responses, less detailed reasoning
# - medium: Balanced speed and quality (recommended)
# - high: Slower but more thorough reasoning
OPENAI_REASONING_EFFORT=medium

# Speed mode mapping to reasoning effort
# - fast: Quick analysis with low reasoning effort
# - balanced: Standard analysis with medium reasoning effort (default)
# - thorough: Detailed analysis with high reasoning effort
# - maximum: Most comprehensive analysis with high reasoning effort
OPENAI_SPEED_MODE=balanced

# Legacy GPT-4 Configuration (fallback options)
# Use these if GPT-5 is not available or for specific use cases
# OPENAI_MODEL=gpt-4o
# OPENAI_FALLBACK_MODEL=gpt-4

# Performance & Reliability Configuration
# Request timeout in milliseconds (30 seconds recommended)
OPENAI_TIMEOUT=30000
# Maximum retry attempts for failed requests
OPENAI_MAX_RETRIES=3
# Base delay for exponential backoff retry (milliseconds)
OPENAI_RETRY_BASE_DELAY=1000
# Maximum delay between retries (milliseconds)
OPENAI_RETRY_MAX_DELAY=10000

# Rate Limiting Configuration
# Requests per minute (adjust based on your OpenAI plan)
OPENAI_RATE_LIMIT_RPM=60
# Requests per day (safety limit)
OPENAI_RATE_LIMIT_RPD=1000
# Enable rate limiting (true/false)
OPENAI_RATE_LIMIT_ENABLED=true

# Monitoring & Health Check Configuration
# Health check interval in minutes
OPENAI_HEALTH_CHECK_INTERVAL=5
# Enable detailed API usage logging (true/false)
OPENAI_USAGE_LOGGING=true
# Enable cost tracking (true/false)
OPENAI_COST_TRACKING=true

# Organization & Project Configuration (optional)
# OpenAI Organization ID (if using organization account)
# OPENAI_ORGANIZATION=org-your-organization-id
# OpenAI Project ID (if using project-based billing)
# OPENAI_PROJECT=proj-your-project-id

# Circuit Breaker Configuration
# Enable circuit breaker for API failures (true/false)
OPENAI_CIRCUIT_BREAKER_ENABLED=true
# Failure threshold before opening circuit
OPENAI_CIRCUIT_BREAKER_THRESHOLD=5
# Circuit breaker timeout in milliseconds
OPENAI_CIRCUIT_BREAKER_TIMEOUT=60000

# Development & Testing Configuration
# Enable mock responses for testing (true/false)
OPENAI_MOCK_ENABLED=false
# Test API key for development (if different from production)
# OPENAI_TEST_API_KEY=sk-your-test-api-key-here

# Rate Limiting
RATE_LIMIT_WINDOW=15
RATE_LIMIT_MAX=100

# Security Headers
SECURITY_LEVEL=strict

# Cloudinary Configuration
# =======================
# SETUP INSTRUCTIONS:
# 1. Create account at: https://cloudinary.com/
# 2. Access Dashboard: https://cloudinary.com/console
# 3. Copy credentials from Account Details section
# 4. Configure upload presets for your environment
#
# SECURITY WARNING: Never commit real API secrets to version control!
# For production, use Railway environment variables or similar secure storage.
#
# Cloud Name (public identifier, safe to expose)
CLOUDINARY_CLOUD_NAME=your-cloudinary-cloud-name
# API Key (public identifier, safe to expose)  
CLOUDINARY_API_KEY=your-cloudinary-api-key
# API Secret (PRIVATE KEY - never expose in client-side code)
CLOUDINARY_API_SECRET=your-cloudinary-api-secret
# Complete Cloudinary URL (includes all credentials in one variable)
CLOUDINARY_URL=cloudinary://your-api-key:your-api-secret@your-cloud-name

# Upload Configuration
# Upload preset for signed/unsigned uploads (configure in Cloudinary console)
CLOUDINARY_UPLOAD_PRESET=trade_charts_development
# Folder structure for organized storage
CLOUDINARY_FOLDER=trade-analysis/development
# Enable automatic format optimization
CLOUDINARY_AUTO_FORMAT=true
# Enable automatic quality optimization  
CLOUDINARY_AUTO_QUALITY=true

# File Upload Configuration
MAX_FILE_SIZE_MB=10
MAX_AVATAR_SIZE_MB=2
MAX_IMAGE_SIZE_MB=5
ALLOWED_FILE_TYPES=jpg,jpeg,png,gif,webp,pdf,doc,docx,txt

# File Storage Quotas (in bytes)
USER_STORAGE_QUOTA=1073741824  # 1GB per user
ADMIN_STORAGE_QUOTA=10737418240  # 10GB for admin users