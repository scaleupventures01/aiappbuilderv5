# Environment Configuration Example
# Copy this file to .env and fill in your actual values

# Environment
NODE_ENV=development

# Server Configuration
PORT=3001
BASE_URL=http://localhost:3001
FRONTEND_URL=http://localhost:3000
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
BODY_LIMIT=10mb
SERVER_TIMEOUT=30000

# Database Configuration
DATABASE_URL=postgresql://username:password@localhost:5432/orch_auth
DB_HOST=localhost
DB_PORT=5432
DB_NAME=orch_auth
DB_USER=your_db_user
DB_PASSWORD=your_db_password
DB_SSL=false

# Redis Configuration (for sessions and rate limiting)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DATABASE=0

# Session Configuration
SESSION_SECRET=your_super_secret_session_key_at_least_32_characters_long_for_security
SESSION_NAME=orch.sid
SESSION_MAX_AGE=86400000

# JWT Configuration
JWT_ACCESS_SECRET=your_jwt_access_secret_at_least_32_characters_long_for_security
JWT_REFRESH_SECRET=your_jwt_refresh_secret_different_from_access_secret_32_chars
JWT_ACCESS_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# Google OAuth Configuration
# Get these from https://console.developers.google.com/
GOOGLE_CLIENT_ID=your_google_client_id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your_google_client_secret

# GitHub OAuth Configuration
# Get these from https://github.com/settings/applications/new
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret

# Microsoft OAuth Configuration
# Get these from https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade
MICROSOFT_CLIENT_ID=your_microsoft_client_id
MICROSOFT_CLIENT_SECRET=your_microsoft_client_secret

# Security Configuration
BCRYPT_ROUNDS=12
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Logging Configuration
LOG_LEVEL=info
LOG_FILE=logs/auth.log

# Feature Flags
ENABLE_CSRF=true
ENABLE_RATE_LIMITING=true
ENABLE_REQUEST_LOGGING=true

# Production-specific settings (set these in production)
# Make sure to use HTTPS URLs in production
# Example production URLs:
# BASE_URL=https://api.yourdomain.com
# FRONTEND_URL=https://app.yourdomain.com
# ALLOWED_ORIGINS=https://app.yourdomain.com,https://yourdomain.com

# Database SSL should be enabled in production
# DB_SSL=true

# Use stronger Redis password in production
# REDIS_PASSWORD=your_strong_redis_password

# Use environment-specific secrets in production
# Generate using: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"